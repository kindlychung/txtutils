library(txtutils)
setwd("~/personal_config_bin_files/workspace/txtutils/example")
library(txtutils)
library(txtutils)
coutlines("test.assoc.linear")
countlines("test.assoc.linear")
library(txtutils)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
library(txtutils)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
library(txtutils)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
library(txtutils)
readcol("test.assoc.linear", 1, 3)
readcol("test.assoc.linear", 1, 3)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 1, 3)
library(txtutils)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 1, 3)
library(txtutils)
readcol("test.assoc.linear", 1, 3)
library(txtutils)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 1, 3)
library(txtutils)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 1, 3)
readcol("test.assoc.linear", 1, 1, 5)
readcol("test.assoc.linear", 2, 1, 5)
readcol("test.assoc.linear", 3, 1, 5)
x = readplinkoutr("test.assoc.linear")
x = readplinkoutr(filename = "test.assoc.linear", colnameSelect = c("SNP", "TEST", "P"))
require(devtools)
library(txtutils)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 3, 1, 5)
x = readplinkoutr(filename = "test.assoc.linear", colnameSelect = c("SNP", "TEST", "P"))
require(devtools)
print("=debug=", head(x))
print.matrix
print
print(paste("=debug=", capture.output(head(x))))
print(paste("=debug=", paste(capture.output(head(x)), collapse = "")))
print(paste("=debug=", paste(capture.output(head(x)), collapse = "\n")))
print(paste("=debug=", paste(capture.output(head(x)), collapse = "\\n")))
print(paste("=debug=", paste(capture.output(head(x)), collapse = "     ")))
print(paste("=debug=", paste(capture.output(head(x)), "\n", collapse = "")))
print(paste("=debug=", paste(capture.output(print(head(x))), "\n", collapse = "")))
print(paste("=debug=", cat(capture.output(print(head(x))), sep="\n")))
print(cat("=debug=\n", cat(capture.output(print(head(x))), sep="\n")))
cat("=debug=\n", cat(capture.output(print(head(x))), sep="\n"))
x = matrix(1:100, 10)
cat("=debug=\n", cat(capture.output(print(head(x))), sep="\n"))
y = cat("=debug=\n", cat(capture.output(print(head(x))), sep="\n"))
y = cat("=debug=\n", paste(capture.output(print(head(x))), collapse="\n"))
y = paste("=debug=\n", paste(capture.output(print(head(x))), collapse="\n"))
y
cat(y)
y = paste("=debug========\n", paste(capture.output(print(head(x))), collapse="\n"))
cat(y)
message(y)
library(txtutils)
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 3, 1, 5)
x = readplinkoutr(filename = "test.assoc.linear", colnameSelect = c("SNP", "TEST", "P"))
require(devtools)
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
require(devtools)
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 3, 1, 5)
x = readplinkoutr(filename = "test.assoc.linear", colnameSelect = c("SNP", "TEST", "P"))
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 3, 1, 5)
x = readplinkoutr(filename = "test.assoc.linear", colnameSelect = c("SNP", "TEST", "P"))
setwd("~/personal_config_bin_files/workspace/txtutils")
require(devtools)
document()
document()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?countlines
?txtutils::countlines
devtools::load_all(".")
require(devtools)
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
setwd(system.file("example", package="txtutils"))
countlines("test.assoc.linear")
fileExists("test.assoc.linear")
ncols("test.assoc.linear")
readcol("test.assoc.linear", 3, 1, 5)
x = readplinkoutr(filename = "test.assoc.linear", colnameSelect = c("SNP", "TEST", "P"))
x = matrix(1:100, 10)
y = paste("=debug========\n", paste(capture.output(print(head(x))), collapse="\n"))
x = readplinkoutr(filename = "test.assoc.linear", colnameSelect = c("SNP", "TEST", "P"))
devtools::load_all("~/personal_config_bin_files/workspace/txtutils")
devtools::load_all(".")
library(txtutils)
