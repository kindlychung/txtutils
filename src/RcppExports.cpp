// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// countlines
size_t countlines(std::string fn);
RcppExport SEXP txtutils_countlines(SEXP fnSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::string >::type fn(fnSEXP );
        size_t __result = countlines(fn);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// fileExists
void fileExists(const std::string& name);
RcppExport SEXP txtutils_fileExists(SEXP nameSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const std::string& >::type name(nameSEXP );
        fileExists(name);
    }
    return R_NilValue;
END_RCPP
}
// ncols
size_t ncols(std::string fn);
RcppExport SEXP txtutils_ncols(SEXP fnSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::string >::type fn(fnSEXP );
        size_t __result = ncols(fn);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// printlines
void printlines(std::string fn);
RcppExport SEXP txtutils_printlines(SEXP fnSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::string >::type fn(fnSEXP );
        printlines(fn);
    }
    return R_NilValue;
END_RCPP
}
// readcol
std::vector< std::string > readcol(std::string fileName, size_t colNum, size_t nSkip, size_t maxRowNum);
RcppExport SEXP txtutils_readcol(SEXP fileNameSEXP, SEXP colNumSEXP, SEXP nSkipSEXP, SEXP maxRowNumSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::string >::type fileName(fileNameSEXP );
        Rcpp::traits::input_parameter< size_t >::type colNum(colNumSEXP );
        Rcpp::traits::input_parameter< size_t >::type nSkip(nSkipSEXP );
        Rcpp::traits::input_parameter< size_t >::type maxRowNum(maxRowNumSEXP );
        std::vector< std::string > __result = readcol(fileName, colNum, nSkip, maxRowNum);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// readcols
Rcpp::CharacterMatrix readcols(std::string fn, std::vector<int> colsel, size_t nFirstSkipLines, size_t nSkipUnit);
RcppExport SEXP txtutils_readcols(SEXP fnSEXP, SEXP colselSEXP, SEXP nFirstSkipLinesSEXP, SEXP nSkipUnitSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::string >::type fn(fnSEXP );
        Rcpp::traits::input_parameter< std::vector<int> >::type colsel(colselSEXP );
        Rcpp::traits::input_parameter< size_t >::type nFirstSkipLines(nFirstSkipLinesSEXP );
        Rcpp::traits::input_parameter< size_t >::type nSkipUnit(nSkipUnitSEXP );
        Rcpp::CharacterMatrix __result = readcols(fn, colsel, nFirstSkipLines, nSkipUnit);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
